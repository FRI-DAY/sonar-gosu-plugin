on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/actions/**'
      - '**.md'

jobs:
  # FETCH CURRENT PLUGIN VERSION
  fetch-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      release: ${{ steps.get_version.outputs.release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get Plugin Version
        id: get_version
        run: |
          VERSION=$(grep "version" gradle.properties | cut -d'=' -f2)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            echo "release=true" >> $GITHUB_OUTPUT
          else
            echo "release=false" >> $GITHUB_OUTPUT
          fi
          cat "${GITHUB_OUTPUT}"
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # previous LTS version
          - SONAR_SERVER_VERSION: 8.9.10
            SONAR_WS_VERSION: 8.9.9.56886
            SONAR_PLUGIN_API_VERSION: 6.7.7
            SONAR_JAVA_VERSION: 7.11.0.29148
            SONAR_SERVER_JAVA_VERSION: 11
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK ${{ matrix.SONAR_SERVER_JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.SONAR_SERVER_JAVA_VERSION }}
          distribution: temurin
          cache: 'gradle'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run Integration Tests
        run: |
          ./gradlew testIntegration --build-cache --no-daemon \
            -PsonarqubeVersion=${{ matrix.SONAR_SERVER_VERSION }} \
            -PsonarqubeWsVersion=${{ matrix.SONAR_WS_VERSION }} \
            -PsonarPluginApiVersion=${{ matrix.SONAR_PLUGIN_API_VERSION }} \
            -PsonarJavaVersion=${{ matrix.SONAR_JAVA_VERSION }}
  snapshot:
    needs: [fetch-version, integration-tests]
    if: needs.fetch-version.outputs.release == 'false'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java:
          - 11
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: temurin
          cache: 'gradle'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build
        run: |
          ./gradlew clean build --build-cache --no-daemon
      - name: Sonar
        run: |
          ./gradlew sonar --no-daemon \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.pullrequest.provider=github \
            -Dsonar.pullrequest.github.repository=${{ github.repository }} \
            -Dsonar.branch.name=${GITHUB_REF##*/}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Archive artifact
        if: success() && matrix.java == '11'
        uses: actions/upload-artifact@v3
        with:
          name: snapshot
          path: build/libs/*.jar
  # RELEASE THE PLUGIN
  release:
    needs: [fetch-version, integration-tests]
    if: needs.fetch-version.outputs.release == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
          cache: 'gradle'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up Git
        run: |
          git config user.name GitHub
          git config user.email noreply@github.com
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        run: |
          ./gradlew clean release \
            -Prelease.useAutomaticVersion=true \
            -Prelease.releaseVersion=${{ needs.fetch-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Sonar
        run: |
          ./gradlew sonar --no-daemon \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.pullrequest.provider=github \
            -Dsonar.pullrequest.github.repository=${{ github.repository }} \
            -Dsonar.projectVersion=${{ needs.fetch-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Archive artifact
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: build/libs/*.jar
      - name: Fetch ChangeLog
        if: success()
        run: |
          ./gradlew getChangelog -q --no-header --no-summary > ${{ github.workspace }}-CHANGELOG.txt
      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ needs.fetch-version.outputs.version }}
          tag_name: v${{ needs.fetch-version.outputs.version }}
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          draft: true
          files: |
            build/libs/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
